extends layout

block content
  .content
    table(style='width:100%;table-layout:fixed', border='0')

          tr
            td(style="vertical-align: top;text-align: left; max-width:40%; padding: 10px;")

                if(error)
                    h3(style="color: red; margin-left: 0px;padding-left: 0px !important;") Error
                    pre
                        code(id="error_details" class="prettyprint" style="word-break: break-all; white-space: normal;") error: #{error} #{response.statusCode} <br> error_description: #{error_description}

                if access_token
                      -
                        access_token_decoded = parseJwt(access_token);

                      table(id="tokens")
                        tr
                            td
                                a(href="#" alt="copy access_token", id="access_token_button" onclick="copyToClipboard('#access_token')" )
                                    img(height="40px",src=`/images/icon-access-token.svg`)
                            td
                                pre
                                    code(id="access_token" class="prettyprint" style="word-break: break-all; white-space: normal;") #{access_token}
                        tr
                            td
                            td
                                pre
                                    code(id="access_token_decoded" class="prettyprint" style="word-break: break-all; white-space: normal;") #{JSON.stringify(access_token_decoded)}

                else

                    form(action="/client_credentials" method="POST")
                        table(border='0' border-collapse: collapse;)
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='Your applications client ID') client_id:
                                td
                                    input(type="text" required name="client_id" id="client_id" style="width:400px" value=process.env.CLIENT_ID)
                                    input(type="hidden" name="domain" id="domain" style="width:400px" value=process.env.DOMAIN)
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='Your applications Client Secret.') client_secret:
                                td
                                    input(type="text" required name="client_secret" id="client_secret" style="width:400px" value=process.env.CLIENT_SECRET)
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='the identifier of the API who the access_token is for') audience:
                                td
                                    input(type="text" required name="audience" id="audience" style="width:400px" value=process.env.AUDIENCE)
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='add read:grants and/or write:grants for testing RBAC') scope:
                                td
                                    input(type="text" name="scope" id="scope" style="width:400px" value="read:test")
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='Denotes the flow you are using. For Client Credentials use client_credentials.') grant_type:
                                td
                                    select(name="grant_type" id="grant_type" style="width:400px")
                                      option(value=client_credentials) client_credentials

                        input(type="submit")

            td(style="vertical-align: top;text-align: left; max-width:60%; padding: 10px;")
                h1 client_credentials (M2M)
                p With machine-to-machine (M2M) applications, such as CLIs, daemons, or services running on your back-end, the system authenticates and authorizes the app rather than a user. For this scenario, typical authentication schemes like username + password or social logins don't make sense. Instead, M2M apps use the Client Credentials Flow (defined in OAuth 2.0 RFC 6749, section 4.4), in which they pass along their Client ID and Client Secret to authenticate themselves and get a token.
                p
                    a(href="https://auth0.com/docs/get-started/authentication-and-authorization-flow/client-credentials-flow" target="_blank") Learn more.
                if(!access_token)
                    p 1) Your app authenticates with the Auth0 Authorization Server using its Client ID and Client Secret (/oauth/token endpoint).

                if(access_token)

                    p 2) Your Auth0 Authorization Server validates the Client ID and Client Secret.

                    p 3) Your Auth0 Authorization Server responds with an Access Token.

                    p 4) Your application can use the Access Token to call an API on behalf of itself. (see <a href="/call_api">Call API</a>)

                img(width="100%", src="https://images.ctfassets.net/cdy7uua7fh8z/2waLvaQdM5Fl5ZN5xUrF2F/8c5ddae68ac8dd438cdeb91fe1010fd1/auth-sequence-client-credentials.png")

    table(style='width:100%;table-layout:fixed', border='0')
          tr
            td

                div(id="request_details")

                    if(error)
                        h3(style="margin-left: 0px;padding-left: 0px !important;") + Error details
                        pre
                            code(id="error_details" class="prettyprint" style="word-break: break-all; white-space: normal;") error: #{error} #{response.statusCode} <br> error_description: #{error_description}

                    if(request)
                        h3(style="margin-left: 0px;padding-left: 0px !important;") + Request details
                        pre
                            code(id="request_url" class="prettyprint" style="word-break: break-all; white-space: normal;") URL: #{request.uri} <br> Method: #{request.method} <br> Body: #{JSON.stringify(request.form)} <br> Headers: #{JSON.stringify(request.headers)}

                    if(response)
                        h3(style="margin-left: 0px;padding-left: 0px !important;") + Response details
                        pre
                            code(id="response_url" class="prettyprint" style="word-break: break-all; white-space: normal;") Body: #{JSON.stringify(response.body)} <br> Status Code : #{response.statusCode} <br> Headers : #{JSON.stringify(response.headers)}