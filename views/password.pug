extends layout

block content
  .content
    table(style='width:100%;table-layout:fixed', border='0')

          tr
            td(style="vertical-align: top;text-align: left; max-width:40%; padding: 10px;")

                if error
                    h3(style="color: red; margin-left: 0px;padding-left: 0px !important;") Error
                    pre
                        code(id="error_details" class="prettyprint" style="word-break: break-all; white-space: normal;") error: #{error} #{response.statusCode} <br> error_description: #{error_description}

                if access_token || id_token
                    table(id="tokens")
                        if id_token
                            -
                                id_token_decoded = parseJwt(id_token);
                            tr
                                td
                                    a(href="#" alt="copy id_token", id="id_token_button" onclick="copyToClipboard('#id_token')" )
                                     img(height="40px",src=`/images/icon-id-token.svg`)
                                td
                                    pre
                                        code(id="id_token" class="prettyprint" style="word-break: break-all; white-space: normal;") #{id_token}
                            tr
                                td
                                td
                                    pre
                                        code(id="id_token_decoded" class="prettyprint" style="word-break: break-all; white-space: normal;") #{JSON.stringify(id_token_decoded)}

                        if access_token
                            -
                                access_token_decoded = parseJwt(access_token);
                            tr
                                td
                                    a(href="#" alt="copy access_token", id="access_token_button" onclick="copyToClipboard('#access_token')" )
                                        img(height="40px",src=`/images/icon-access-token.svg`)
                                td
                                    pre
                                        code(id="access_token" class="prettyprint" style="word-break: break-all; white-space: normal;") #{access_token}
                            tr
                                td
                                td
                                    pre
                                        code(id="access_token_decoded" class="prettyprint" style="word-break: break-all; white-space: normal;") #{JSON.stringify(access_token_decoded)}
                        if refresh_token
                            tr
                                td
                                    a(href="#" alt="copy refresh_token", id="refresh_token_button" onclick="copyToClipboard('#refresh_token')" )
                                        img(height="40px",src=`/images/icon-refresh-token.svg`)
                                td
                                    pre
                                        code(id="refresh_token" style="word-break: break-all; white-space: normal;") #{refresh_token}

                else
                    form(action="/password" method="POST")
                        table(border='0' border-collapse: collapse;)
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='Your applications client ID') client_id:
                                td
                                    input(type="text" required name="client_id" id="client_id" style="width:400px" value=process.env.CLIENT_ID)
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='Your applications Client Secret.') client_secret:
                                td
                                    input(type="text" required name="client_secret" id="client_secret" style="width:400px" value=process.env.CLIENT_SECRET)
                                    input(type="hidden" name="user_ip" id="user_ip" style="width:400px" value="")
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='the identifier of the API who the access_token is for') audience:
                                td
                                    input(type="text" required name="audience" id="audience" style="width:400px" value=process.env.AUDIENCE)
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='include offline_access to request refresh_token. Add read:test and/or write:test for testing RBAC. Add stepup:test for testing contextual MFA') scope:
                                td
                                      each val, index in ['scope_openid;true', 'scope_email;true', 'scope_profile;true', 'scope_offline_access;true', 'scope_read;true', 'scope_write;false', 'scope_stepup;false']
                                          if(val.split(";")[1]=="true")
                                            input.checkbox-input(type='checkbox', name=val.split(";")[0], checked=val.split(";")[1], id=`${val.split(";")[0]}`)
                                          else
                                            input.checkbox-input(type='checkbox', name=val.split(";")[0], id=`${val.split(";")[0]}`)

                                          label(for=`${val.split(";")[0]}`)=val.split(";")[0].replace("scope_","")
                              tr
                                td
                                   p
                                td
                                    input(type="text" name="scope" id="scope" style="width:400px" value="")
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='Denotes the flow you are using. For Resource Owner Password use password. To add realm support use http://auth0.com/oauth/grant-type/password-realm.') grant_type:
                                td
                                    select(name="grant_type" id="grant_type" style="width:400px")
                                      option(value="password") password
                                      option(value="http://auth0.com/oauth/grant-type/password-realm") http://auth0.com/oauth/grant-type/password-realm
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='Resource Owners identifier, such as a username or email address.') username:
                                td
                                    input(type="text" required name="username" id="username" style="width:400px" value="user@example.org")
                              tr
                                td
                                    p(class="required tooltip", data-toggle='tooltip', data-placement='right', title='Resource Owners secret.') password:
                                td
                                    input(type="text" required name="password" id="password" style="width:400px" value="Auth0Dem0!")
                              tr
                                td
                                    p(data-toggle='tooltip', data-placement='right', title='the name of a connection to authenticate against. Must be used with password-realm grant_type') realm (optional):
                                td
                                    input(type="text" name="realm" id="realm" style="width:400px" value="")
                        input(type="submit")

            td(style="vertical-align: top;text-align: left; max-width:60%; padding: 10px;")
                h1 password (resource owner password grant)
                p Though we do not recommend it, highly-trusted applications can use the Resource Owner Password Flow (defined in OAuth 2.0 RFC 6749, section 4.3), which requests that users provide credentials (username and password), typically using an interactive form. Because credentials are sent to the backend and can be stored for future use before being exchanged for an Access Token, it is imperative that the application is absolutely trusted with this information.

                p Even if this condition is met, the Resource Owner Password Flow should only be used when redirect-based flows (like the Authorization Code Flow) cannot be used.
                p Because the Resource Owner Password (ROP) Flow involves the application handling the user's password, it must not be used by third-party clients.

                p
                    a(href="https://auth0.com/docs/get-started/authentication-and-authorization-flow/resource-owner-password-flow" target="_blank") Learn more.
                if(!code & !id_token)
                    p 1) The user clicks Login within the application and enters their credentials.
                    p 2) (when you press submit) Your application forwards the user's credentials to your Auth0 Authorization Server (/oauth/token endpoint).

                if(id_token)
                    p 3) Your Auth0 Authorization Server validates the credentials.
                    p 4) Your Auth0 Authorization Server responds with an Access Token (and optionally, a Refresh Token).
                    p 5) Your application can use the access_token to call an API (see <a href="/call_api">Call API</a>) to access information about the user. The API responds with requested data.
                    p 6) Once the access_token is expired the refresh_token can be used to get a new one (see <a href="/refresh_token">refresh_token</a>).
                img(width="100%", src="https://images.ctfassets.net/cdy7uua7fh8z/4EeYNcnVX1RFcTy5z4lP4v/c3e4d22e6f8bf558caf07338a7388097/ROP_Grant.png")

    table(style='width:100%;table-layout:fixed', border='0')
          tr
            td

                div(id="request_details")

                    if(error)
                        h3(style="margin-left: 0px;padding-left: 0px !important;") + Error details
                        pre
                            code(id="error_details" class="prettyprint" style="word-break: break-all; white-space: normal;") error: #{error} <br> error_description: #{error_description} <br> mfa_token: #{JSON.stringify(mfa_token)}

                    if(request)
                        h3(style="margin-left: 0px;padding-left: 0px !important;") + Request details
                        pre
                            code(id="request_url" class="prettyprint" style="word-break: break-all; white-space: normal;") URL: #{request.uri} <br> Method: #{request.method} <br> Body: #{JSON.stringify(request.form)} <br> Headers: #{JSON.stringify(request.headers)}

                    if(response)
                        h3(style="margin-left: 0px;padding-left: 0px !important;") + Response details
                        pre
                            code(id="response_url" class="prettyprint" style="word-break: break-all; white-space: normal;") Body: #{JSON.stringify(response.body)} <br> Status Code : #{response.statusCode} <br> Headers : #{JSON.stringify(response.headers)}
