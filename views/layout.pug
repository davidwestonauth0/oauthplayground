-
 function parseJwt (token) {
     var base64Url = token.split('.')[1];
     var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
     var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
         return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
     }).join(''));

     return JSON.parse(jsonPayload);
 };


doctype html
html
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title Oauth Flow Playground
    link(rel='icon', href='/favicon.png')
    link(rel='preload', as='font', type='font/woff2', crossorigin, href='https://cdn.auth0.com/styleguide/core/2.0.1/fonts/fakt/FaktPro-Normal.woff2')
    link(rel='stylesheet', href='/stylesheets/style.css')
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js")
    script(src="https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js")
    script(src="http://code.jquery.com/ui/1.10.0/jquery-ui.js")
    script(src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous")
  body
    include header.pug
    script.
        function post(path, params, method='post') {

          // The rest of this code assumes you are not using a library.
          // It can be made less verbose if you use one.
          const form = document.createElement('form');
          form.method = method;
          form.action = path;

          for (const key in params) {
            if (params.hasOwnProperty(key)) {
              const hiddenField = document.createElement('input');
              hiddenField.type = 'hidden';
              hiddenField.name = key;
              hiddenField.value = params[key];

              form.appendChild(hiddenField);
            }
          }

          document.body.appendChild(form);
          form.submit();
        }

        $(function () {
          $('[data-toggle="tooltip"]').tooltip()
        })

        function copyToClipboard(element) {
          var $temp = $("<input>");
          $("body").append($temp);
          $temp.val($(element).text()).select();
          document.execCommand("copy");
          $temp.remove();
        }

        document.addEventListener('DOMContentLoaded', (event) => {
                    /* Add "https://api.ipify.org?format=json" statement
                               this will communicate with the ipify servers in
                               order to retrieve the IP address $.getJSON will
                               load JSON-encoded data from the server using a
                               GET HTTP request */

                    $.getJSON("https://api.ipify.org?format=json", function(data) {
                        if(document.getElementById("user_ip")) {
                            document.getElementById("user_ip").value = data.ip;
                        }
                    })
        });

        $(document).ready(function () {
            jQuery("#request_details").accordion({
                collapsible: true,
                active:false,
                activate: function (event, ui) {

                    jQuery(".accordion").accordion("resize");
                }
            });
          // Here is how to set an option after the accordion has
          // already been instantiated
          $( "#request_details" ).accordion( "option", "icons", { "header": "ui-icon-plus", "activeHeader": "ui-icon-minus" } );

        });


        function parseJwt (token) {
            var base64Url = token.split('.')[1];
            var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));

            return JSON.parse(jsonPayload);
        };


        if (window.location.hash) {
                var hash = window.location.hash.substr(1);

                var result = hash.split('&').reduce(function (res, item) {
                    var parts = item.split('=');
                    res[parts[0]] = parts[1];
                    return res;
                }, {});

              if(result.error) {
                post(window.location.pathname, {response: window.location.href, request: document.referrer, error: result.error, error_description: result.error_description});
              } else{
                post(window.location.pathname, {response: window.location.href, request: document.referrer, id_token: result.id_token, access_token: result.access_token});
              }
        }

    block content
